.data_start

    .export sourceVideoPlayer
    .export texParam
    .export avProToggleParam
    .export useSharedMaterial
    .export rendererIndex
    .export standbyTexture

    __refl_const_intnl_udonTypeID: %SystemInt64, null
    __refl_const_intnl_udonTypeName: %SystemString, null
    useSharedMaterial: %SystemBoolean, null
    rendererIndex: %SystemInt32, null
    avProToggleParam: %SystemString, null
    texParam: %SystemString, null
    standbyTexture: %UnityEngineTexture, null
    sourceVideoPlayer: %VRCUdonUdonBehaviour, null
    targetRenderer: %UnityEngineRenderer, null
    lastRenderTexture: %UnityEngineTexture, null
    __0_this_intnl_UdonSharpVideoVideoScreenHandler: %VRCUdonUdonBehaviour, this
    __0_mp_isAVPro_Boolean: %SystemBoolean, null
    __1_rendererMat_Material: %UnityEngineMaterial, null
    __0_rendererMat_Material: %UnityEngineMaterial, null
    __0_mp_renderTexture_Texture: %UnityEngineTexture, null
    __0_mp_sourcePlayer_USharpVideoPlayer: %VRCUdonUdonBehaviour, null
    __1_const_intnl_SystemInt32: %SystemInt32, null
    __0_const_intnl_SystemInt32: %SystemInt32, null
    __0_const_intnl_SystemObject: %SystemObject, null
    __11_const_intnl_SystemString: %SystemString, null
    __10_const_intnl_SystemString: %SystemString, null
    __9_const_intnl_SystemString: %SystemString, null
    __8_const_intnl_SystemString: %SystemString, null
    __7_const_intnl_SystemString: %SystemString, null
    __6_const_intnl_SystemString: %SystemString, null
    __5_const_intnl_SystemString: %SystemString, null
    __4_const_intnl_SystemString: %SystemString, null
    __3_const_intnl_SystemString: %SystemString, null
    __2_const_intnl_SystemString: %SystemString, null
    __1_const_intnl_SystemString: %SystemString, null
    __0_const_intnl_SystemString: %SystemString, null
    __0_const_intnl_UnityEngineTexture: %UnityEngineTexture, null
    __0_const_intnl_SystemType: %SystemType, null
    __1_const_intnl_exitJumpLoc_UInt32: %SystemUInt32, null
    __0_const_intnl_exitJumpLoc_UInt32: %SystemUInt32, null
    __0_const_intnl_SystemUInt32: %SystemUInt32, null
    __8_intnl_SystemBoolean: %SystemBoolean, null
    __7_intnl_SystemBoolean: %SystemBoolean, null
    __6_intnl_SystemBoolean: %SystemBoolean, null
    __5_intnl_SystemBoolean: %SystemBoolean, null
    __4_intnl_SystemBoolean: %SystemBoolean, null
    __3_intnl_SystemBoolean: %SystemBoolean, null
    __2_intnl_SystemBoolean: %SystemBoolean, null
    __1_intnl_SystemBoolean: %SystemBoolean, null
    __0_intnl_SystemBoolean: %SystemBoolean, null
    __0_intnl_SystemInt32: %SystemInt32, null
    __3_intnl_UnityEngineMaterialArray: %UnityEngineMaterialArray, null
    __2_intnl_UnityEngineMaterialArray: %UnityEngineMaterialArray, null
    __1_intnl_UnityEngineMaterialArray: %UnityEngineMaterialArray, null
    __0_intnl_UnityEngineMaterialArray: %UnityEngineMaterialArray, null
    __0_intnl_returnValSymbol_Texture: %UnityEngineTexture, null
    __0_intnl_UnityEngineTransform: %UnityEngineTransform, null
    __0_intnl_UdonSharpVideoUSharpVideoPlayer: %VRCUdonUdonBehaviour, null
    __0_intnl_returnTarget_UInt32: %SystemUInt32, null

.data_end

        
         #  using JetBrains.Annotations;
        
         #  using UdonSharp;
        
         #  using UnityEngine;
        
         #  namespace UdonSharp.Video
        
         #  [UdonBehaviourSyncMode(BehaviourSyncMode.NoVariableSync)]
        
         #  [AddComponentMenu("Udon Sharp/Video/Utilities/Video Screen Handler")]
        
         #  public class VideoScreenHandler : UdonSharpBehaviour
.code_start
        
         #  [SerializeField, NotNull, Tooltip("The video player that this pulls from")]
        
         #  [Header("Renderer")]
        
         #  [Tooltip("Name of the parameter the shader on this renderer uses to determine if it should preform color and UV correction on the render texture")]
        
         #  [Tooltip("Sets render textures on the renderer's shared material which allows multiple screens to share the same texture and batch")]
        
         #  [Tooltip("The index of the renderer to set the video texture on")]
        
         #  [Tooltip("Texture that will be shown on the screen when the video player is not playing a video")]
        
         #  private Renderer targetRenderer;
        
         #  private Texture lastRenderTexture;
        
         #  private void Start()
    .export _start
        
    _start:
        
        PUSH, __0_const_intnl_SystemUInt32
        
         #  {
        
         #  targetRenderer = GetComponent<Renderer>();
        PUSH, __0_this_intnl_UdonSharpVideoVideoScreenHandler
        PUSH, __0_intnl_UnityEngineTransform
        EXTERN, "UnityEngineComponent.__get_transform__UnityEngineTransform" # GetComponent strongbox mismatch fix
        PUSH, __0_intnl_UnityEngineTransform
        PUSH, __0_const_intnl_SystemType
        PUSH, targetRenderer
        EXTERN, "UnityEngineRenderer.__GetComponent__T"
        
         #  OnEnable();
        PUSH, __0_const_intnl_exitJumpLoc_UInt32
        JUMP, 0x0000006C
        PUSH, __0_intnl_returnTarget_UInt32 # Function epilogue
        COPY
        JUMP_INDIRECT, __0_intnl_returnTarget_UInt32
        
        
         #  private void OnEnable()
    .export _onEnable
        
    _onEnable:
        
        PUSH, __0_const_intnl_SystemUInt32
        
         #  {
        
         #  SetSourceVideoPlayer(sourceVideoPlayer);
        PUSH, sourceVideoPlayer
        PUSH, __0_mp_sourcePlayer_USharpVideoPlayer
        COPY
        PUSH, sourceVideoPlayer
        PUSH, __0_intnl_UdonSharpVideoUSharpVideoPlayer
        COPY #  Copy-on-write symbol value dirtied
        PUSH, __1_const_intnl_exitJumpLoc_UInt32
        JUMP, 0x00000500
        PUSH, __0_intnl_returnTarget_UInt32 # Function epilogue
        COPY
        JUMP_INDIRECT, __0_intnl_returnTarget_UInt32
        
        
         #  private void OnDisable()
    .export _onDisable
        
    _onDisable:
        
        PUSH, __0_const_intnl_SystemUInt32
        
         #  {
        
         #  if (sourceVideoPlayer)
        PUSH, sourceVideoPlayer
        PUSH, __0_intnl_SystemBoolean
        EXTERN, "UnityEngineObject.__op_Implicit__UnityEngineObject__SystemBoolean"
        PUSH, __0_intnl_SystemBoolean
        JUMP_IF_FALSE, 0x00000120
        
         #  sourceVideoPlayer.UnregisterScreenHandler(this);
        PUSH, sourceVideoPlayer
        PUSH, __8_const_intnl_SystemString
        PUSH, __0_this_intnl_UdonSharpVideoVideoScreenHandler
        EXTERN, "VRCUdonCommonInterfacesIUdonEventReceiver.__SetProgramVariable__SystemString_SystemObject__SystemVoid"
        PUSH, sourceVideoPlayer
        PUSH, __9_const_intnl_SystemString
        EXTERN, "VRCUdonCommonInterfacesIUdonEventReceiver.__SendCustomEvent__SystemString__SystemVoid"
        PUSH, __0_intnl_returnTarget_UInt32 # Function epilogue
        COPY
        JUMP_INDIRECT, __0_intnl_returnTarget_UInt32
        
        
         #  [PublicAPI]
    .export GetVideoTexture
        
    GetVideoTexture:
        
        PUSH, __0_const_intnl_SystemUInt32
        
         #  {
        
         #  return lastRenderTexture;
        PUSH, lastRenderTexture
        PUSH, __0_intnl_returnValSymbol_Texture
        COPY
        PUSH, __0_intnl_returnTarget_UInt32 # Explicit return sequence
        COPY
        JUMP_INDIRECT, __0_intnl_returnTarget_UInt32
        PUSH, __0_intnl_returnTarget_UInt32 # Function epilogue
        COPY
        JUMP_INDIRECT, __0_intnl_returnTarget_UInt32
        
        
         #  public void UpdateVideoTexture(Texture renderTexture, bool isAVPro)
    .export UpdateVideoTexture
        
    UpdateVideoTexture:
        
        PUSH, __0_const_intnl_SystemUInt32
        
         #  {
        
         #  if (renderTexture == lastRenderTexture)
        PUSH, __0_mp_renderTexture_Texture
        PUSH, lastRenderTexture
        PUSH, __1_intnl_SystemBoolean
        EXTERN, "UnityEngineObject.__op_Equality__UnityEngineObject_UnityEngineObject__SystemBoolean"
        PUSH, __1_intnl_SystemBoolean
        JUMP_IF_FALSE, 0x000001C4
        
         #  return;
        PUSH, __0_intnl_returnTarget_UInt32 # Explicit return sequence
        COPY
        JUMP_INDIRECT, __0_intnl_returnTarget_UInt32
        
         #  if (targetRenderer)
        PUSH, targetRenderer
        PUSH, __2_intnl_SystemBoolean
        EXTERN, "UnityEngineObject.__op_Implicit__UnityEngineObject__SystemBoolean"
        PUSH, __2_intnl_SystemBoolean
        JUMP_IF_FALSE, 0x000003AC
        
         #  {
        
         #  Material rendererMat;
        
         #  if (useSharedMaterial)
        PUSH, useSharedMaterial
        JUMP_IF_FALSE, 0x0000023C
        
         #  rendererMat = targetRenderer.sharedMaterials[rendererIndex];
        PUSH, targetRenderer
        PUSH, __0_intnl_UnityEngineMaterialArray
        EXTERN, "UnityEngineRenderer.__get_sharedMaterials__UnityEngineMaterialArray"
        PUSH, __0_intnl_UnityEngineMaterialArray
        PUSH, rendererIndex
        PUSH, __0_rendererMat_Material
        EXTERN, "SystemObjectArray.__Get__SystemInt32__SystemObject"
        JUMP, 0x00000274
        
         #  else
        
         #  rendererMat = targetRenderer.materials[rendererIndex];
        PUSH, targetRenderer
        PUSH, __1_intnl_UnityEngineMaterialArray
        EXTERN, "UnityEngineRenderer.__get_materials__UnityEngineMaterialArray"
        PUSH, __1_intnl_UnityEngineMaterialArray
        PUSH, rendererIndex
        PUSH, __0_rendererMat_Material
        EXTERN, "SystemObjectArray.__Get__SystemInt32__SystemObject"
        
         #  if (renderTexture != null)
        PUSH, __0_mp_renderTexture_Texture
        PUSH, __0_const_intnl_UnityEngineTexture
        PUSH, __3_intnl_SystemBoolean
        EXTERN, "UnityEngineObject.__op_Inequality__UnityEngineObject_UnityEngineObject__SystemBoolean"
        PUSH, __3_intnl_SystemBoolean
        JUMP_IF_FALSE, 0x0000036C
        
         #  {
        
         #  rendererMat.SetTexture(texParam, renderTexture);
        PUSH, __0_rendererMat_Material
        PUSH, texParam
        PUSH, __0_mp_renderTexture_Texture
        EXTERN, "UnityEngineMaterial.__SetTexture__SystemString_UnityEngineTexture__SystemVoid"
        
         #  if (!string.IsNullOrEmpty(avProToggleParam))
        PUSH, avProToggleParam
        PUSH, __4_intnl_SystemBoolean
        EXTERN, "SystemString.__IsNullOrEmpty__SystemString__SystemBoolean"
        PUSH, __4_intnl_SystemBoolean
        PUSH, __5_intnl_SystemBoolean
        EXTERN, "SystemBoolean.__op_UnaryNegation__SystemBoolean__SystemBoolean"
        PUSH, __5_intnl_SystemBoolean
        JUMP_IF_FALSE, 0x00000364
        
         #  rendererMat.SetInt(avProToggleParam, isAVPro ? 1 : 0);
        PUSH, __0_mp_isAVPro_Boolean
        JUMP_IF_FALSE, 0x00000330
        PUSH, __0_const_intnl_SystemInt32
        PUSH, __0_intnl_SystemInt32
        COPY
        JUMP, 0x00000344
        PUSH, __1_const_intnl_SystemInt32
        PUSH, __0_intnl_SystemInt32
        COPY
        PUSH, __0_rendererMat_Material
        PUSH, avProToggleParam
        PUSH, __0_intnl_SystemInt32
        EXTERN, "UnityEngineMaterial.__SetInt__SystemString_SystemInt32__SystemVoid"
        JUMP, 0x000003AC
        
         #  else
        
         #  {
        
         #  rendererMat.SetTexture(texParam, standbyTexture);
        PUSH, __0_rendererMat_Material
        PUSH, texParam
        PUSH, standbyTexture
        EXTERN, "UnityEngineMaterial.__SetTexture__SystemString_UnityEngineTexture__SystemVoid"
        
         #  rendererMat.SetInt(avProToggleParam, 0);
        PUSH, __0_rendererMat_Material
        PUSH, avProToggleParam
        PUSH, __1_const_intnl_SystemInt32
        EXTERN, "UnityEngineMaterial.__SetInt__SystemString_SystemInt32__SystemVoid"
        
         #  lastRenderTexture = renderTexture;
        PUSH, __0_mp_renderTexture_Texture
        PUSH, lastRenderTexture
        COPY
        PUSH, __0_intnl_returnTarget_UInt32 # Function epilogue
        COPY
        JUMP_INDIRECT, __0_intnl_returnTarget_UInt32
        
        
         #  public void SetToStandby()
    .export SetToStandby
        
    SetToStandby:
        
        PUSH, __0_const_intnl_SystemUInt32
        
         #  {
        
         #  Material rendererMat;
        
         #  if (useSharedMaterial)
        PUSH, useSharedMaterial
        JUMP_IF_FALSE, 0x0000042C
        
         #  rendererMat = targetRenderer.sharedMaterials[rendererIndex];
        PUSH, targetRenderer
        PUSH, __2_intnl_UnityEngineMaterialArray
        EXTERN, "UnityEngineRenderer.__get_sharedMaterials__UnityEngineMaterialArray"
        PUSH, __2_intnl_UnityEngineMaterialArray
        PUSH, rendererIndex
        PUSH, __1_rendererMat_Material
        EXTERN, "SystemObjectArray.__Get__SystemInt32__SystemObject"
        JUMP, 0x00000464
        
         #  else
        
         #  rendererMat = targetRenderer.materials[rendererIndex];
        PUSH, targetRenderer
        PUSH, __3_intnl_UnityEngineMaterialArray
        EXTERN, "UnityEngineRenderer.__get_materials__UnityEngineMaterialArray"
        PUSH, __3_intnl_UnityEngineMaterialArray
        PUSH, rendererIndex
        PUSH, __1_rendererMat_Material
        EXTERN, "SystemObjectArray.__Get__SystemInt32__SystemObject"
        
         #  rendererMat.SetTexture(texParam, standbyTexture);
        PUSH, __1_rendererMat_Material
        PUSH, texParam
        PUSH, standbyTexture
        EXTERN, "UnityEngineMaterial.__SetTexture__SystemString_UnityEngineTexture__SystemVoid"
        
         #  if (!string.IsNullOrEmpty(avProToggleParam))
        PUSH, avProToggleParam
        PUSH, __6_intnl_SystemBoolean
        EXTERN, "SystemString.__IsNullOrEmpty__SystemString__SystemBoolean"
        PUSH, __6_intnl_SystemBoolean
        PUSH, __7_intnl_SystemBoolean
        EXTERN, "SystemBoolean.__op_UnaryNegation__SystemBoolean__SystemBoolean"
        PUSH, __7_intnl_SystemBoolean
        JUMP_IF_FALSE, 0x000004E4
        
         #  rendererMat.SetInt(avProToggleParam, 0);
        PUSH, __1_rendererMat_Material
        PUSH, avProToggleParam
        PUSH, __1_const_intnl_SystemInt32
        EXTERN, "UnityEngineMaterial.__SetInt__SystemString_SystemInt32__SystemVoid"
        PUSH, __0_intnl_returnTarget_UInt32 # Function epilogue
        COPY
        JUMP_INDIRECT, __0_intnl_returnTarget_UInt32
        
        
         #  [PublicAPI]
        
         #  public void SetSourceVideoPlayer(USharpVideoPlayer sourcePlayer)
    .export SetSourceVideoPlayer
        
    SetSourceVideoPlayer:
        
        PUSH, __0_const_intnl_SystemUInt32
        
         #  {
        
         #  if (sourcePlayer)
        PUSH, __0_mp_sourcePlayer_USharpVideoPlayer
        PUSH, __8_intnl_SystemBoolean
        EXTERN, "UnityEngineObject.__op_Implicit__UnityEngineObject__SystemBoolean"
        PUSH, __8_intnl_SystemBoolean
        JUMP_IF_FALSE, 0x000005AC
        
         #  {
        
         #  sourceVideoPlayer.UnregisterScreenHandler(this);
        PUSH, sourceVideoPlayer
        PUSH, __8_const_intnl_SystemString
        PUSH, __0_this_intnl_UdonSharpVideoVideoScreenHandler
        EXTERN, "VRCUdonCommonInterfacesIUdonEventReceiver.__SetProgramVariable__SystemString_SystemObject__SystemVoid"
        PUSH, sourceVideoPlayer
        PUSH, __9_const_intnl_SystemString
        EXTERN, "VRCUdonCommonInterfacesIUdonEventReceiver.__SendCustomEvent__SystemString__SystemVoid"
        
         #  sourceVideoPlayer = sourcePlayer;
        PUSH, __0_mp_sourcePlayer_USharpVideoPlayer
        PUSH, sourceVideoPlayer
        COPY
        
         #  sourceVideoPlayer.RegisterScreenHandler(this);
        PUSH, sourceVideoPlayer
        PUSH, __10_const_intnl_SystemString
        PUSH, __0_this_intnl_UdonSharpVideoVideoScreenHandler
        EXTERN, "VRCUdonCommonInterfacesIUdonEventReceiver.__SetProgramVariable__SystemString_SystemObject__SystemVoid"
        PUSH, sourceVideoPlayer
        PUSH, __11_const_intnl_SystemString
        EXTERN, "VRCUdonCommonInterfacesIUdonEventReceiver.__SendCustomEvent__SystemString__SystemVoid"
        PUSH, __0_intnl_returnTarget_UInt32 # Function epilogue
        COPY
        JUMP_INDIRECT, __0_intnl_returnTarget_UInt32
        
.code_end
